import codecademylib3_seaborn
import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets

digits = datasets.load_digits()
print(digits.DESCR)
print('--------------')
print(digits.data)
print('--------------')
print(digits.target)

plt.gray() 

plt.matshow(digits.images[100])

plt.show()

print(digits.target[100])

# Figure size (width, height)

fig = plt.figure(figsize=(6, 6))

# Adjust the subplots 

fig.subplots_adjust(left=0, right=1, bottom=0, top=1, hspace=0.05, wspace=0.05)

# For each of the 64 images

for i in range(64):

    # Initialize the subplots: add a subplot in the grid of 8 by 8, at the i+1-th position

    ax = fig.add_subplot(8, 8, i+1, xticks=[], yticks=[])

    # Display an image at the i-th position

    ax.imshow(digits.images[i], cmap=plt.cm.binary, interpolation='nearest')

    # Label the image with the target value

    ax.text(0, 7, str(digits.target[i]))

plt.show()

from sklearn.cluster import KMeans

model = KMeans(n_clusters=10, random_state=42)
model.fit(digits.data)

fig = plt.figure(figsize=(8, 3))

fig.suptitle('Cluser Center Images', fontsize=14, fontweight='bold')

for i in range(10):

  # Initialize subplots in a grid of 2X5, at i+1th position
  ax = fig.add_subplot(2, 5, 1 + i)

  # Display images
  ax.imshow(model.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)

plt.show()

new_samples = np.array([
[0.00,0.00,0.00,1.00,0.61,0.00,0.00,0.00,0.00,0.00,4.51,7.63,5.95,0.00,0.00,0.00,0.00,1.30,7.64,7.32,7.17,0.00,0.00,0.00,0.00,0.23,2.82,3.50,7.63,0.77,0.00,0.00,0.00,0.00,0.00,3.36,7.63,0.30,0.00,0.00,0.00,0.00,0.00,4.58,6.79,0.00,0.00,0.00,0.00,0.00,0.00,5.42,5.88,0.00,0.00,0.00,0.00,0.00,0.00,6.03,4.88,0.00,0.00,0.00],
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,2.21,5.11,5.73,5.87,1.60,0.00,0.00,1.23,7.48,6.86,5.34,7.17,5.03,0.00,0.00,0.77,5.11,0.69,0.23,7.02,5.03,0.00,0.00,0.00,0.00,0.00,2.36,7.63,2.44,0.00,0.00,0.23,2.83,4.96,7.25,7.25,2.44,1.29,0.00,2.22,7.63,7.63,7.63,7.63,7.63,5.72],
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.84,2.98,0.69,0.00,0.00,0.00,0.23,4.20,7.55,7.63,7.17,0.69,0.00,0.00,4.05,7.63,4.65,4.20,7.63,2.21,0.00,0.00,2.98,7.63,6.03,7.63,6.41,0.54,0.00,0.00,2.22,7.63,7.63,7.63,6.26,1.75,0.00,0.00,1.99,7.64,5.57,6.80,7.63,5.26,0.00,0.00,0.00,3.28,7.32,7.63,6.33,1.07,0.00],
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.15,0.38,0.00,6.86,3.05,0.00,0.00,0.00,5.26,6.41,0.00,7.62,3.81,0.00,0.00,0.38,7.40,4.73,0.00,7.63,3.81,0.00,0.00,3.44,7.63,5.12,5.18,7.63,7.63,7.63,2.29,6.71,7.62,7.63,6.33,7.63,5.57,3.05,0.46,1.98,2.75,0.31,0.00,7.63,3.81,0.00,0.00,0.00,0.00,0.00,0.00,5.34,2.28,0.00,0.00]
])

new_labels = model.predict(new_samples)
print(new_labels)

for i in range(len(new_labels)):
  if new_labels[i] == 0:
    print(0, end='')
  elif new_labels[i] == 1:
    print(9, end='')
  elif new_labels[i] == 2:
    print(2, end='')
  elif new_labels[i] == 3:
    print(1, end='')
  elif new_labels[i] == 4:
    print(6, end='')
  elif new_labels[i] == 5:
    print(8, end='')
  elif new_labels[i] == 6:
    print(4, end='')
  elif new_labels[i] == 7:
    print(5, end='')
  elif new_labels[i] == 8:
    print(7, end='')
  elif new_labels[i] == 9:
    print(3, end='')
